using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.IO;
using CodeRunner;
using ToolBelt;

public class Program
{
	public static int Main(string[] args)
	{
		if (args.Length == 0)
		{
			Console.WriteLine("Usage: {0} <debug | release>", ScriptEnvironment.ScriptPath.FileAndExtension);
			return 0;
		}

		string flavor = @"bin\" + args[0] + @"\";
		string programFiles32 = Environment.GetFolderPath(Environment.SpecialFolder.ProgramFiles);
		string pseudoDir = Path.Combine(programFiles32, "Pseudo\\");
		ParsedPath addinDir90 = new ParsedPath(ScriptEnvironment.ScriptPath.RootAndDirectory + @"..\PseudoUnitTestAddin90\").MakeFullPath();
		ParsedPath addinDir100 = new ParsedPath(ScriptEnvironment.ScriptPath.RootAndDirectory + @"..\PseudoUnitTestAddin100\").MakeFullPath();
		
		if (!Directory.Exists(pseudoDir))
			Directory.CreateDirectory(pseudoDir);

		CopyFile(addinDir90 + flavor, pseudoDir, "PseudoUnitTestAddin90.dll");
		CopyFile(addinDir90 + flavor, pseudoDir, "PseudoUnitTestAddin90.pdb");
		CopyFile(addinDir90, pseudoDir, "PseudoUnitTestAddin90.Addin");
		CopyFile(addinDir100 + flavor, pseudoDir, "PseudoUnitTestAddin100.dll");
		CopyFile(addinDir100 + flavor, pseudoDir, "PseudoUnitTestAddin100.pdb");
		CopyFile(addinDir100, pseudoDir, "PseudoUnitTestAddin100.Addin");

		return 0;
	}

	static private void CopyFile(string fromDir, string toDir, string fileSpec)
	{
		string fromFile = fromDir + fileSpec;
		string toFile = toDir + fileSpec;

		if (File.Exists(fromFile))
		{
			File.Copy(fromFile, toFile, true);
			Console.WriteLine("Copied '{0}' to '{1}'", fromFile, toFile);
		}
		else
		{
			ConsoleUtility.WriteMessage(MessageType.Warning, "'{0}' not found", fromFile);
		}
	}
}
